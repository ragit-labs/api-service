"""Setup Initial Models

Revision ID: b647202409fc
Revises: 
Create Date: 2024-04-29 20:13:31.407787

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b647202409fc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('context',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('readable_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('search_mode', postgresql.ENUM('SEARCH', 'SEARCH_WITH_CITATIONS', 'HYDE', name='documentsearchmode'), nullable=False),
    sa.Column('retrieval_length', sa.Integer(), nullable=False),
    sa.Column('docs_to_retrieve', sa.Integer(), nullable=False),
    sa.Column('max_doc_length', sa.Integer(), nullable=False),
    sa.Column('doc_overlap_length', sa.Integer(), nullable=False),
    sa.Column('embedding_model', sa.String(), nullable=False),
    sa.Column('embedding_dimension', sa.Integer(), nullable=False),
    sa.Column('distance_metric', postgresql.ENUM('COSINE', 'EUCLIDEAN', 'DOT', name='documentembeddingdistancemetric'), nullable=False),
    sa.Column('semantic_search', sa.Boolean(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('extra_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('last_refreshed_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', 'readable_id', 'project_id'),
    sa.UniqueConstraint('id', name='ux_context_id')
    )
    op.create_table('file',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('s3_key', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'FINISHED', 'ARKIVED', 'DELETED', name='filestatus'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', name='ux_file_id')
    )
    op.create_table('project',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('readable_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'readable_id'),
    sa.UniqueConstraint('id', name='ux_project_id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('signin_provider', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', name='ux_user_id')
    )
    op.create_table('context_file',
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('context_id', sa.UUID(), nullable=False),
    sa.Column('linked_at', sa.DateTime(), nullable=False),
    sa.Column('status', postgresql.ENUM('PENDING', 'FINISHED', 'FAILED', name='embeddingstatus'), nullable=False),
    sa.ForeignKeyConstraint(['context_id'], ['context.id'], ),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('file_id', 'context_id')
    )
    op.create_table('user_context',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('context_id', sa.UUID(), nullable=False),
    sa.Column('permission', postgresql.ENUM('READ', 'WRITE', 'ADMIN', 'OWNER', name='contextpermission'), nullable=False),
    sa.ForeignKeyConstraint(['context_id'], ['context.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'context_id')
    )
    op.create_table('user_file',
    sa.Column('file_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('file_id', 'user_id')
    )
    op.create_table('user_project',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('permission', postgresql.ENUM('READ', 'WRITE', 'ADMIN', 'OWNER', name='projectpermission'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_project')
    op.drop_table('user_file')
    op.drop_table('user_context')
    op.drop_table('context_file')
    op.drop_table('user')
    op.drop_table('project')
    op.drop_table('file')
    op.drop_table('context')
    op.execute('DROP TYPE filestatus')
    op.execute('DROP TYPE contextpermission')
    op.execute('DROP TYPE projectpermission')
    op.execute('DROP TYPE embeddingstatus')
    op.execute('DROP TYPE documentsearchmode')
    op.execute('DROP TYPE documentembeddingdistancemetric')
    # ### end Alembic commands ###